renv::snapshot()
q()
renv::restore()
packages <- c(
"dplyr",
"readr",
"tidyr",
"purrr",
"broom",
"magrittr",
"corrplot",
"caret",
"rpart",
"rpart.plot",
"e1071",
"torch",
"luz"
)
# renv::install(packages)
sapply(packages, require, character.only=T)
packages <- c(
"dplyr",
"readr",
"tidyr",
"purrr",
"broom",
"magrittr",
"corrplot",
"caret",
"rpart",
"rpart.plot",
"e1071",
"torch",
"luz"
)
renv::install(packages)
sapply(packages, require, character.only=T)
path <- "data/housing.csv"
df <- read.csv(path)
df
str(df)
df <- read.csv(path)
df <- read.csv(path)
df %>% head()
str(df)
df <- read.csv(path) %>%
mutate_if(\(x) is.character(x), as.factor)
str(df)
str(df)
df <- read.csv(path) %>%
mutate_if(\(x) is.character(x), as.factor) %>%
(\(x) {
names(x) <- tolower(names(x))
x
}) %>%
na.omit()
df %>% head()
df%>%head()
str(df)
path <- "data/housing.csv"
df <- read.csv(path) %>%
mutate_if(\(x) is.character(x), as.factor) %>%
(\(x) {
names(x) <- tolower(names(x))
x
}) %>%
na.omit()
df %>%
select(where(is.numeric)) %>%
cor() %>%
corrplot()
df %>%
select(where(is.numeric)) %>%
cor() %>%
corrplot(diag = F)
df %>%
select(where(is.numeric)) %>%
cor() %>%
round(digits = 2)
df %>%
select(where(is.numeric)) %>%
cor() %>%
round(digits = 2) %>%
corrplot(diag = F)
set.seed(42)
test_ind <- sample(
1:nrow(df),
floor( nrow(df)/10 ),
replace=FALSE
)
df_train <- df[-test_ind, ]
df_test  <- df[test_ind, ]
df_train
df_test
set.seed(42)
test_ind <- sample(
1:nrow(df),
floor( nrow(df)/10 ),
replace=FALSE
)
df_train <- df[-test_ind, ]
df_test  <- df[test_ind, ]
View(df)
df %>%
select(-households)
lm_fit <- lm(y ~ . -households, data = df)
lm_fit <- lm(median_house_value ~ . -households, data = df)
summary(lm_fit)
lm_fit <- lm(median_house_value ~ . -households, data = df)
lm_fit <- lm(median_house_value ~ . -households, data = df_train)
lm_predictions <- predict(lm_fit, newdata = df_test)
lm_predictions
rmse(df_test$median_house_value, lm_predictions)
rmse <- function(y, yhat) {
sqrt(mean((y - yhat)^2))
}
rmse(df_test$median_house_value, lm_predictions)
rpart_fit <- rpart(median_house_value ~ . -households, data = df_train)
rpart_fit
rpart_fit <- rpart(median_house_value ~ . -households, data = df_train)
rpart_predictions <- predict(rpart_fit, newdata = df_train)
rpart_predictions
rpart_predictions <- predict(rpart_fit, newdata = df_train)
?rpart.plot()
rpart.plot(rpart_fit)
rpart.plot(rpart_fit, tweak = 0.8)
rpart_predictions <- rmse(df_test$median_house_value, rpart_predictions)
rpart_predictions
svm_fit <- svm(median_house_value ~ . -households, data = df_train)
rpart_fit <- rpart(median_house_value ~ . -households, data = df_train)
rpart_predictions <- predict(rpart_fit, newdata = df_test)
rpart.plot(rpart_fit, tweak = 0.8)
rpart_predictions <- rmse(df_test$median_house_value, rpart_predictions)
rpart_predictions
rpart_predictions <- rmse(df_test$median_house_value, rpart_predictions)
rpart_predictions
rpart_fit <- rpart(median_house_value ~ . -households, data = df_train)
rpart_predictions <- predict(rpart_fit, newdata = df_test)
rpart.plot(rpart_fit, tweak = 0.8)
rpart_predictions <- rmse(df_test$median_house_value, rpart_predictions)
rpart_predictions
svm_fit <- svm(median_house_value ~ . -households, data = df_train)
?svm()
svm_fit <- svm(median_house_value ~ . -households, data = df_train, kernel = 'radial')
svm_predictions <- predict(svm_fit, newdata = df_test)
rmse(df_test$median_house_value, svm_predictions)
NNet <- nn_module(
initialize = function(p, q1, q2, q3){
self$hidden1 <- nn_linear(p, q1)
self$hidden2 <- nn_linear(q1, q2)
self$hidden3 <- nn_linear(q2, q3)
self$output <- nn_linear(q3, 1)
self$activation <- nn_relu()
self$sigmoid <- nn_sigmoid()
},
forward = function(x){
self$hidden1() %>%
self$activation() %>%
self$hidden2()
self$activation() %>%
self$hidden3() %>%
self$activation() %>%
self$output() %>%
self$sigmoid()
}
)
